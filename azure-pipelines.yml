stages:
- stage: 'BlackDuck_Scan'
  jobs:
    - job: detect
      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.x'
          addToPath: true

      - task: CmdLine@2
        displayName: 'Install Python dependencies and trigger Black Duck scan'
        inputs:
          script: |
            # Download and install Synopsys Detect if it's not already available
            DETECT_JAR=detect.jar
            if [ ! -f "$DETECT_JAR" ]; then
              echo "Downloading Synopsys Detect..."
              curl -s -L -o detect.jar https://detect.synopsys.com/detect.jar
            fi

            # Find all requirements.txt files and process them
            find . -name "requirements.txt" -type f -exec sh -c '
              for req in "$@"; do
                  # Install the packages from the current requirements.txt file
                  echo "Installing packages from $req"
                  
                  while IFS= read -r package || [ -n "$package" ]; do
                      pip install --no-cache-dir --no-deps "$package" || echo "Failed to install $package"
                  done < "$req"

                  # Extract the path to the directory containing the current requirements.txt
                  req_dir=$(dirname "$req")
                  
                  # Generate a unique code location name using the path to the requirements.txt
                  code_location_name="python-packages-$(echo "$req_dir" | tr / -)"
                  
                  echo "Running Black Duck scan for $req with code location $code_location_name"
                  
                  # Run the Black Duck scan for the current requirements.txt using the detect jar
                  java -jar detect.jar \
                      --detect.project.name=velocity \
                      --detect.project.version.name=velocity \
                      --blackduck.trust.cert=true \
                      --detect.detector.search.depth=100 \
                      --detect.tools=DETECTOR \
                      --detect.detector.search.continue=true \
                      --detect.code.location.name="$code_location_name" \
                      --detect.source.path="$req_dir"

                  # Wait for 10 seconds before processing the next requirements.txt file
                  echo "Waiting for 10 seconds before starting the next installation and scan..."
                  sleep 10

              done
            ' sh {} +